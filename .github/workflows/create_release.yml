name: Create Release

on:
  workflow_dispatch:

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Read the current project version
      - name: Get current version
        id: get_version
        run: |
          VERSION=$(cat version.txt)
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Increment the revision number
      - name: Increment version
        id: increment_version
        run: |
          VERSION="${{ env.VERSION }}"
          MAJOR=$(echo $VERSION | cut -d'.' -f1)
          MINOR=$(echo $VERSION | cut -d'.' -f2)
          REVISION=$(echo $VERSION | cut -d'.' -f3)
          NEW_REVISION=$((REVISION + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_REVISION"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Update the version.txt file
      - name: Update version.txt
        run: |
          echo ${{ env.NEW_VERSION }} > version.txt

      # Commit the updated version.txt back to the repository
      - name: Commit new version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "Update version to ${{ env.NEW_VERSION }}"
          git push

      # Tag the repository with the new version
      - name: Tag repository
        run: |
          git tag -a ${{ env.NEW_VERSION }} -m "Release ${{ env.NEW_VERSION }}"
          git push origin ${{ env.NEW_VERSION }}

      # Download the drtk-gui artifact
      - name: Download drtk-gui artifact
        uses: actions/download-artifact@v4
        with:
          name: drtk-gui
          path: ./artifacts/drtk-gui

      # Download the drtk-cli artifact
      - name: Download drtk-cli artifact
        uses: actions/download-artifact@v4
        with:
          name: drtk-cli
          path: ./artifacts/drtk-cli

      # Create a new GitHub release with the incremented version and the new tag
      - name: Create GitHub release
        id: create_release
        run: |
          gh release create ${{ env.NEW_VERSION }} \
          --title "Release ${{ env.NEW_VERSION }}" \
          --notes "Automated release for version ${{ env.NEW_VERSION }}" \
          --target ${{ env.NEW_VERSION }}

      # Upload the frontend .zip artifact to the release
      - name: Upload frontend .zip artifact to release
        run: |
          gh release upload ${{ env.NEW_VERSION }} \
          "./artifacts/drtk-gui/*.zip" \
          --clobber

      # Upload the backend .zip artifact to the release
      - name: Upload backend .zip artifact to release
        run: |
          gh release upload ${{ env.NEW_VERSION }} \
          "./artifacts/drtk-cli/*.zip" \
          --clobber
